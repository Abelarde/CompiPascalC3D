program Funciones;
var
    n: integer; 
function factorial(n: integer): integer;
begin
    if (n = 0) then
        factorial := 1
    else
        factorial := n * factorial(n - 1)
end;

function fibonacci(n: integer): integer;
begin
    if (n = 0) then
        fibonacci := 0
    else if (n = 1) then
        fibonacci := 1
    else
        fibonacci := fibonacci(n-1)+fibonacci(n-2)
end;

function ackermann(m,n: integer): integer;
begin
    if (m = 0) then
    begin
        ackermann := n + 1;
    end
    else if (m>0) AND (n = 0) then
    begin
        ackermann := ackermann(m - 1, 1);
    end
    else
    begin
        ackermann := ackermann(m - 1, ackermann(m,n - 1));
    end
end;

function potencia(base,exp:integer):integer;
begin
    if(exp=0) then
        potencia :=1
    else
        potencia := base*potencia(base,exp-1)
end;


function modulo(n,p:integer):integer;
begin
    if(n<p) then
        modulo:= n
    else
        modulo:= modulo(n-p,p)
end;


function mcd(a,b:integer):integer;
begin
    if(b=0) then
        mcd:=a
    else
        mcd := mcd(b,modulo(a,b))
end;


function hofstaderFemenina(n:integer):integer ;
begin
    if n < 0 then
        hofstaderFemenina := 0
    else if n = 0 then
        hofstaderFemenina := 1
    else
        hofstaderFemenina := n - hofstaderFemenina(n - 1)
end;

function hofstaderMasculino(n:integer):integer ;
begin
    if n < 0 then
        hofstaderMasculino := 0
    else if n = 0 then
        hofstaderMasculino := 0
    else
        hofstaderMasculino := n - hofstaderMasculino(n - 1)
end;

procedure Hanoi(discos:integer; origen,aux,destino:string);
begin
    if(discos=1) then
        writeln('Mover Disco de ',origen, ' a ',destino)
    else
        Begin
        Hanoi(discos-1,origen,destino,aux);
        writeln('Mover disco de ',origen,' a ',destino);
        Hanoi(discos-1,aux,origen,destino);
        End;
end;

begin
    writeln(ackermann(3,4));
end.


program Funciones;

function ackermann(m,n: integer): integer;
begin
    if (m = 0) then
    begin
        ackermann() := n + 1;
    end
    else if (m>0) AND (n = 0) then
    begin
        ackermann() := ackermann(m - 1, 1);
    end
    else
    begin
        ackermann() := ackermann(m - 1, ackermann(m,n - 1));
    end
end;

begin
    writeln(ackermann(3,4));
end.


